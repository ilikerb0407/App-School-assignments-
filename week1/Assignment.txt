Git& GitHub

Q2

git status = 顯示repo 目前的工作狀態

git add = 在編輯檔案之後要執行的功能，可以把已修改的內容新增到repo

git commit = 再上傳到自己的github 之前，可以對自己剛剛所編輯的動作做簡單的紀錄說明

git log = 可以顯示編輯repo的所有歷史紀錄

git push = 將自己做的修改動作上傳到自己的Github

git remote -v = 想要將自己桌面所建立的檔案藉由git 上傳到GitHub 之前要做的初始化動作

git branch =

git fork =

Q3 Please describe how to establish a GitHub repo and how to upload the local projects to GitHub. Try to explain your answers with as much detail as possible. 建立GitHub repo 第一種[自己建立LICENSE & README.md]

cd Desktop
mkdir newfile
cd newfile
git init = create the new repo
vim LICENSE = 建立License
輸入年份和姓名
check status 會發現有untracked file git
git add newfile
vim README.md
insert i = 做編輯 11.編輯完之後,esc [:wq]
有了 LICENSE & README.md 就可以push 到自己的GitHub
到GitHub 建立一個新的repo，copy http link
cd 到Desktop/newfile
git remote add origin [paste http formed by new repo]
git remote -vv [出現 fetch & push]
git push —set-upstream origin master
在GitHub 上面建立一個新的token 並且copy 密碼
輸入 user name 和 token 密碼
git status, log 檢查工作狀態
去自己的Github 重新整理檢查是否有新增repo 成功
建立GitHub repo 第二種[clone]

去自己的GitHub 建立新的repo 並且選擇LICENSE & README.md
copy http link
cd Desktop
git clone [repo http link]
新的repo 就會出現在locak Desktop
upload the local project to Github

cd Deasktop
mkdir newfile
build LICENCE & README.md
git remote add origin [paste http]
git remote -vv
git push -set-upstream origin master
build new token on GitHub
enter user name and token passwords
check status
Function Q1

func greet (person: String) -> String { return "Hello, (person)" } print (greet(person:"Luke")) Q2

func multiply(a :Int , b :Int)-> Int{ let b = 10 return multiply(a: a, b:b) } print ("a*b")

Q3

argument label 是在呼叫function 時候的外部參數, parameter name 是寫在function內的參數

Q4

第一個顯示的type是字串，第二個顯示的type是數字